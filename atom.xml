<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Antidote</title>
  
  <subtitle>后海有树的院子，夏有代工的玉，此时此刻的云，二十来岁的你</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-10-14T09:51:55.710Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>zjj</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>负载均衡</title>
    <link href="http://example.com/2020/10/14/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    <id>http://example.com/2020/10/14/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</id>
    <published>2020-10-14T07:23:32.000Z</published>
    <updated>2020-10-14T09:51:55.710Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;前因：&quot;&gt;&lt;a href=&quot;#前因：&quot; class=&quot;headerlink&quot; title=&quot;前因：&quot;&gt;&lt;/a&gt;前因：&lt;/h2&gt;&lt;p&gt;最近在学习微服务时，无意间接触到负载均衡这个名词。当时也没有在意，后因为考试原因查看无线传感网络资料”拓扑控制的基本策略”中有提到了“负载均衡”一词。抱着刨根问底的态度，决定一探究竟：&lt;/p&gt;</summary>
    
    
    
    <category term="耳濡目染" scheme="http://example.com/categories/%E8%80%B3%E6%BF%A1%E7%9B%AE%E6%9F%93/"/>
    
    
    <category term="负载均衡" scheme="http://example.com/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis</title>
    <link href="http://example.com/2020/10/13/MyBatis/"/>
    <id>http://example.com/2020/10/13/MyBatis/</id>
    <published>2020-10-13T07:50:48.000Z</published>
    <updated>2020-10-13T08:24:38.477Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;MyBatis概述&quot;&gt;&lt;a href=&quot;#MyBatis概述&quot; class=&quot;headerlink&quot; title=&quot;MyBatis概述:&quot;&gt;&lt;/a&gt;MyBatis概述:&lt;/h2&gt;&lt;p&gt;MyBatis是当前JAVA Web开发中流行的持久化ORM框架，它对JDBC进行了封装化简，无需JDVX的注册驱动，创建Connection连接、配置Statement等繁琐过程，大大减少了JDBC代码。&lt;/p&gt;</summary>
    
    
    
    <category term="MyBatis" scheme="http://example.com/categories/MyBatis/"/>
    
    
    <category term="概述" scheme="http://example.com/tags/%E6%A6%82%E8%BF%B0/"/>
    
    <category term="知识点" scheme="http://example.com/tags/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>微服务中的组件与技术选型</title>
    <link href="http://example.com/2020/10/13/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%AD%E7%9A%84%E7%BB%84%E4%BB%B6%E4%B8%8E%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B/"/>
    <id>http://example.com/2020/10/13/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%AD%E7%9A%84%E7%BB%84%E4%BB%B6%E4%B8%8E%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B/</id>
    <published>2020-10-13T04:56:25.000Z</published>
    <updated>2020-10-13T06:23:31.894Z</updated>
    
    
    <summary type="html">&lt;p&gt;1、服务注册于服务发现&lt;br&gt;    服务注册就是将服务的IP和port注册到注册中心，注册中心为Map，其中key是服务的唯一标识（可以是serviceID，也可以是serviceName）,而value是一个包含ipAndPort的结构体的集合，例如是一个List集合，该集合List集合中存放了指定service所在的所有服务器。&lt;br&gt;        主要实现了服务之间的解耦，如果不使用服务注册中心，那么我们需要将被调用服务的服务器列表直接写在调用服务的配置文件中。这造成了两个服务的直接耦合。之后，在调用服务的时候，通过一定的负载均衡算法，从服务器列表中获取一台服务器进行调用。此时，如果被调用的服务所在的服务器有宕机情况或者新添加了服务器，调用服务也不会发现，除非修改配置文件，之后还需要重启服务器。而使用服务注册和服务发现后，调用服务会及时发现新增的机器或者宕掉的机器，并且不需要重启。&lt;br&gt;2、健康检查：&lt;/p&gt;</summary>
    
    
    
    <category term="微服务架构" scheme="http://example.com/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="组件" scheme="http://example.com/tags/%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>微服务概述</title>
    <link href="http://example.com/2020/10/13/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%A6%82%E8%BF%B0/"/>
    <id>http://example.com/2020/10/13/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%A6%82%E8%BF%B0/</id>
    <published>2020-10-13T04:48:47.000Z</published>
    <updated>2020-10-13T04:55:31.744Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是微服务&quot;&gt;&lt;a href=&quot;#什么是微服务&quot; class=&quot;headerlink&quot; title=&quot;什么是微服务&quot;&gt;&lt;/a&gt;什么是微服务&lt;/h2&gt;&lt;p&gt;微服务架构风格是将一个单位的应用程序开发拆分为一组“小”&lt;br&gt;的服务。这里说的“小”是以业务边界来区分的，而不是根据代码的多少来区分。每个服务都运行在一个单独的进程中，服务之间通过轻量级的机制进行通信，例如使用HTTP资源接口；每个服务都可以通过全自动化的部署机制来独立部署；微服务中的各个服务可以以多种语言来编写，但是在实际开发中，由于各个公司的技术栈有限,通常会指定一门技术语言，例如Java；每个服务都可以使用不同数据存储技术，例如MySQL、Cassandra（开源分布式NoSQL数据库系统）及MongoDB（分布式文件存储的数据库），但为了同一，通常使用同一种存储技术。&lt;/p&gt;</summary>
    
    
    
    <category term="微服务架构" scheme="http://example.com/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/"/>
    
    
    <category term="概述" scheme="http://example.com/tags/%E6%A6%82%E8%BF%B0/"/>
    
    <category term="架构" scheme="http://example.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>悟透JavaScript</title>
    <link href="http://example.com/2020/10/12/%E6%82%9F%E9%80%8FJavaScript/"/>
    <id>http://example.com/2020/10/12/%E6%82%9F%E9%80%8FJavaScript/</id>
    <published>2020-10-12T12:22:47.000Z</published>
    <updated>2020-10-13T06:23:15.604Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;引子&quot;&gt;&lt;a href=&quot;#引子&quot; class=&quot;headerlink&quot; title=&quot;引子&quot;&gt;&lt;/a&gt;引子&lt;/h1&gt;&lt;p&gt;编程世界里只存在两种基本元素，一个是数据，一个是代码。编程世界就是在数据和代码千丝万缕的纠缠中呈现出无限的生机和活力。&lt;br&gt;数据天生就是文静的，总想保持自己固有的本色；而代码却天生活泼，总想改变这个世界。&lt;/p&gt;</summary>
    
    
    
    <category term="摘要" scheme="http://example.com/categories/%E6%91%98%E8%A6%81/"/>
    
    
    <category term="面向对象" scheme="http://example.com/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>表单提交错误</title>
    <link href="http://example.com/2020/10/12/%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4%E9%94%99%E8%AF%AF/"/>
    <id>http://example.com/2020/10/12/%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4%E9%94%99%E8%AF%AF/</id>
    <published>2020-10-12T03:11:14.000Z</published>
    <updated>2020-10-12T11:19:51.650Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;在编写Servlet实现表单提交程序中，出现-500-java-lang-NoClassDefFoundError-org-apache-commons-collections-FastHashMap报错：&quot;&gt;&lt;a href=&quot;#在编写Servlet实现表单提交程序中，出现-500-java-lang-NoClassDefFoundError-org-apache-commons-collections-FastHashMap报错：&quot; class=&quot;headerlink&quot; title=&quot;在编写Servlet实现表单提交程序中，出现 -500 java.lang.NoClassDefFoundError: org/apache/commons/collections/FastHashMap报错：&quot;&gt;&lt;/a&gt;在编写Servlet实现表单提交程序中，出现 -500 java.lang.NoClassDefFoundError: org/apache/commons/collections/FastHashMap报错：&lt;/h2&gt;&lt;p&gt;其原因所在就是commons-collection-4.X以上的包中不存在FastHashMap方法，只需要替换成commons-collection-3.2版本即可（记得导入JAR包，然后重启Tomcat）&lt;br&gt;BeanUtil-1.9.3+&lt;br&gt;Collection-3.2.2+&lt;br&gt;loggin-1.2&lt;/p&gt;</summary>
    
    
    
    <category term="request" scheme="http://example.com/categories/request/"/>
    
    <category term="工具包" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7%E5%8C%85/"/>
    
    <category term="版本问题" scheme="http://example.com/categories/%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="表单提交" scheme="http://example.com/tags/%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4/"/>
    
  </entry>
  
  <entry>
    <title>本地图片不显示问题</title>
    <link href="http://example.com/2020/10/10/%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2020/10/10/%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</id>
    <published>2020-10-10T07:33:58.000Z</published>
    <updated>2020-10-11T11:12:50.694Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;博客图片不显示问题&quot;&gt;&lt;a href=&quot;#博客图片不显示问题&quot; class=&quot;headerlink&quot; title=&quot;博客图片不显示问题&quot;&gt;&lt;/a&gt;博客图片不显示问题&lt;/h2&gt;&lt;p&gt;修改博客根目录中的_config.yml文件的配置post_asset,其默认为false将其改为true&lt;br&gt;当我们设置结束后，通过hexo new(可简写“n”)新建博客后，会产生一个与文件同名的&lt;br&gt;文件夹。&lt;/p&gt;</summary>
    
    
    
    <category term="布局" scheme="http://example.com/categories/%E5%B8%83%E5%B1%80/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
    <category term="UI" scheme="http://example.com/tags/UI/"/>
    
  </entry>
  
  <entry>
    <title>md基础格式</title>
    <link href="http://example.com/2020/10/10/md%E5%9F%BA%E7%A1%80%E6%A0%BC%E5%BC%8F/"/>
    <id>http://example.com/2020/10/10/md%E5%9F%BA%E7%A1%80%E6%A0%BC%E5%BC%8F/</id>
    <published>2020-10-10T06:54:04.000Z</published>
    <updated>2020-10-11T03:11:20.867Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;md编写格式&quot;&gt;&lt;a href=&quot;#md编写格式&quot; class=&quot;headerlink&quot; title=&quot;md编写格式&quot;&gt;&lt;/a&gt;md编写格式&lt;/h1&gt;&lt;h2 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h2&gt;&lt;p&gt;使用标题是需要使用#号&lt;/p&gt;
&lt;h2 id=&quot;段落&quot;&gt;&lt;a href=&quot;#段落&quot; class=&quot;headerlink&quot; title=&quot;段落&quot;&gt;&lt;/a&gt;段落&lt;/h2&gt;&lt;p&gt;这是第一个段落内容&lt;/p&gt;
&lt;p&gt;这是第二个段落内容&lt;/p&gt;</summary>
    
    
    
    <category term="布局" scheme="http://example.com/categories/%E5%B8%83%E5%B1%80/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
    <category term="md基础格式" scheme="http://example.com/tags/md%E5%9F%BA%E7%A1%80%E6%A0%BC%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Hello World（很熟悉吧，heihei）</title>
    <link href="http://example.com/2020/10/09/hello-world/"/>
    <id>http://example.com/2020/10/09/hello-world/</id>
    <published>2020-10-09T09:22:20.000Z</published>
    <updated>2020-10-10T12:15:41.266Z</updated>
    
    
    <summary type="html">&lt;p&gt;总算完成了一个小目标。。。&lt;/p&gt;
&lt;h2 id=&quot;庆幸自己能坚持到现在&quot;&gt;&lt;a href=&quot;#庆幸自己能坚持到现在&quot; class=&quot;headerlink&quot; title=&quot;庆幸自己能坚持到现在&quot;&gt;&lt;/a&gt;庆幸自己能坚持到现在&lt;/h2&gt;&lt;p&gt;创建博客一方面帮助自己记录学习心得，一方面也能帮助他人解决问题。想想就有些小兴奋&lt;/p&gt;
&lt;h3 id=&quot;记录想法、记录历程&quot;&gt;&lt;a href=&quot;#记录想法、记录历程&quot; class=&quot;headerlink&quot; title=&quot;记录想法、记录历程&quot;&gt;&lt;/a&gt;记录想法、记录历程&lt;/h3&gt;&lt;p&gt;这个听起来好虚无缥缈， 每个劝人写作的鸡汤都这样说，有意思吗？是没意思，可是事实确实如此，你体验不到的东西，不代表不存在。&lt;/p&gt;</summary>
    
    
    
    <category term="第一次" scheme="http://example.com/categories/%E7%AC%AC%E4%B8%80%E6%AC%A1/"/>
    
    <category term="成长" scheme="http://example.com/categories/%E6%88%90%E9%95%BF/"/>
    
    
    <category term="第一次" scheme="http://example.com/tags/%E7%AC%AC%E4%B8%80%E6%AC%A1/"/>
    
    <category term="成长" scheme="http://example.com/tags/%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
</feed>
